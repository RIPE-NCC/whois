<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd">

    <bean class="net.ripe.db.whois.common.WhoisCommonConfig" />

    <context:component-scan base-package="net.ripe.db.whois.update"/>

    <beans profile="DEPLOYED">
        <bean id="mailSender" class="net.ripe.db.whois.update.mail.CustomJavaMailSender" primary="true">
            <property name="host" value="${mail.smtp.host}"/>
            <property name="port" value="${mail.smtp.port:25}"/>
            <property name="javaMailProperties" ref="javaMailProperties"/>
        </bean>
    </beans>
    <beans>
        <!-- TODO: [ES] configure in Java component -->
        <!-- Ref. https://javaee.github.io/javamail/docs/api/com/sun/mail/smtp/package-summary.html -->
        <bean id="javaMailProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
            <property name="properties">
                <props>
                    <!-- Mail from envelope. Email that will receive the responses -->
                    <prop key="mail.smtp.from">${mail.smtp.from:}</prop>
                    <!-- Receive the failure messages -->
                    <prop key="mail.smtp.dsn.notify">${mail.smtp.dsn.notify:FAILURE}</prop>
                    <!-- Get required headers in the incoming failure message -->
                    <prop key="mail.smtp.dsn.ret">${mail.smtp.dsn.ret:HDRS}</prop>
                    <!-- Enable debug for mail -->
                    <prop key="mail.debug">${mail.debug:false}</prop>
                    <!-- Enable debug mode for smtp debug -->
                    <prop key="mail.smtp.debug">${mail.smtp.debug:false}</prop>
                    <!-- Socket connection timeout value in milliseconds. Default is infinite timeout. -->
                    <prop key="mail.smtp.connectiontimeout">10000</prop>
                    <!-- Socket read timeout value in milliseconds. Default is infinite timeout. -->
                    <prop key="mail.smtp.timeout">10000</prop>
                    <!-- Socket write timeout value in milliseconds. The overhead of using this timeout is one thread per connection. Default is infinite timeout.-->
                    <prop key="mail.smtp.writetimeout">10000</prop>
                </props>
            </property>
        </bean>
    </beans>

</beans>
