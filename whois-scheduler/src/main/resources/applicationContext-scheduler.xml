<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/task
                           http://www.springframework.org/schema/task/spring-task-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd">

    <import resource="applicationContext-api.xml"/>
    <context:component-scan base-package="net.ripe.db.whois.scheduler"/>

    <bean id="scheduler" class="net.javacrumbs.shedlock.spring.SpringLockableTaskSchedulerFactoryBean">
        <constructor-arg><task:scheduler id="sch" pool-size="10"/></constructor-arg>
        <constructor-arg>
            <bean class="net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateLockProvider">
                <constructor-arg ref="internalsDataSource"/>
            </bean>
        </constructor-arg>
        <!-- when a node dies unexpectedly the job lock is held for at most 23h -->
        <constructor-arg name="defaultLockAtMostFor">
            <bean class="java.time.Duration" factory-method="ofHours">
                <constructor-arg value="23"/>
            </bean>
        </constructor-arg>
    </bean>

    <task:annotation-driven scheduler="scheduler"/>

</beans>
