<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>net.ripe.db</groupId>
    <artifactId>whois</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <organization>
        <name>RIPE NCC, the Netherlands</name>
        <url>http://www.ripe.net/</url>
    </organization>

    <licenses>
        <license>
            <name>BSD</name>
            <url>https://raw.github.com/RIPE-NCC/whois/master/LICENSE.md</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- JAVA version -->
        <java.version>17</java.version>

        <!-- dependencies -->

        <aspectj.version>1.9.19</aspectj.version>
        <awaitility.version>4.2.0</awaitility.version>

        <bouncycastle.version>1.76</bouncycastle.version>

        <c3po.version>0.9.5.5</c3po.version>
        <commons-codec.version>1.16.0</commons-codec.version>
        <!-- TODO: update to commons-collections4 -->
        <commons-collections.version>3.2.2</commons-collections.version>
        <commons-compress.version>1.24.0</commons-compress.version>
        <commons-email.version>1.5</commons-email.version>
        <commons-io.version>2.13.0</commons-io.version>
        <!-- equivalent to https://github.com/jgonian/commons-ip-math/ release 1.23 -->
        <commons-ip-math.version>1.23</commons-ip-math.version>
        <!-- TODO: [ES] Validate.notNull() behaviour has changed in commons-lang3 (throws NullPointerException) -->
        <commons-lang.version>2.6</commons-lang.version>
        <commons-net.version>3.9.0</commons-net.version>
        <commons-validator.version>1.7</commons-validator.version>

        <diffutils.version>1.3.0</diffutils.version>

        <elasticsearch.version>7.15.0</elasticsearch.version>
        <ezvcard.version>0.12.0</ezvcard.version>

        <findbugs.version>3.0.2</findbugs.version>

        <groovy.version>3.0.19</groovy.version>
        <guava.version>32.1.2-jre</guava.version>

        <hamcrest.version>2.2</hamcrest.version>
        <hazelcast.version>4.2.8</hazelcast.version>

        <jackson.version>2.15.2</jackson.version>
        <jaxb.api.version>4.0.0</jaxb.api.version>
        <jaxb.impl.version>4.0.3</jaxb.impl.version>
        <jcache.version>1.1.1</jcache.version>
        <jersey.version>3.0.11</jersey.version>
        <jetty.version>11.0.17</jetty.version>
        <jflex.version>1.9.1</jflex.version>
        <jopt-simple.version>5.0.4</jopt-simple.version>
        <jsoup.version>1.16.1</jsoup.version>
        <junit.version>5.9.3</junit.version>

        <log4j.version>2.20.0</log4j.version>

        <mail.version>2.0.2</mail.version>
        <!-- TODO: update mariadb to 3.x -->
        <mariadb-java-client.version>2.7.10</mariadb-java-client.version>
        <mockito.version>3.12.4</mockito.version>

        <netty.version>4.1.97.Final</netty.version>

        <!-- Added JPA as a compile time dependency to prevent linting errors in IntelliJ -->
        <persistence.version>1.0.2</persistence.version>

        <sentry.version>6.26.0</sentry.version>
        <shedlock.version>4.44.0</shedlock.version>
        <slf4j.version>2.0.7</slf4j.version>
        <solrj.version>1.4.1</solrj.version>
        <spring.version>6.0.11</spring.version>
        <spock.version>2.3-groovy-3.0</spock.version>
        <stax-utils.version>20070216</stax-utils.version>

        <validation.version>3.0.2</validation.version>
        <velocity.version>2.3</velocity.version>

        <whois.main>OVERRIDE</whois.main>
    </properties>

    <scm>
        <developerConnection>scm:git:ssh://git@github.com/RIPE-NCC/whois.git</developerConnection>
    </scm>

    <distributionManagement>
        <repository>
            <id>ripe-releases</id>
            <url>https://artefacts.ripe.net/repository/maven-releases-ncc/</url>
        </repository>
        <snapshotRepository>
            <id>ripe-snapshots</id>
            <url>https://artefacts.ripe.net/repository/maven-snapshots-ncc/</url>
        </snapshotRepository>
    </distributionManagement>

    <modules>
        <module>whois-rpsl</module>
        <module>whois-client</module>
        <module>whois-commons</module>
        <module>whois-query</module>
        <module>whois-nrtm</module>
        <module>whois-update</module>
        <module>whois-api</module>
        <module>whois-scheduler</module>
        <module>whois-db</module>
        <module>whois-endtoend</module>
        <module>whois-nrtm4</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- whois modules' artifacts -->
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-rpsl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-rpsl</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-client</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-commons</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-commons</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-update</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-update</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-nrtm</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-nrtm</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-nrtm4</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-nrtm4</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-query</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-query</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-api</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-scheduler</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-scheduler</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-db</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>net.ripe.db</groupId>
                <artifactId>whois-db</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>net.ripe.commons</groupId>
                <artifactId>commons-ip-math</artifactId>
                <version>${commons-ip-math.version}</version>
            </dependency>
            <!-- Spring Framework -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-oxm</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!-- -->
            <dependency>
                <groupId>de.jflex</groupId>
                <artifactId>jflex</artifactId>
                <version>${jflex.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectj.version}</version>
            </dependency>
            <dependency>
                <groupId>net.sf.jopt-simple</groupId>
                <artifactId>jopt-simple</artifactId>
                <version>${jopt-simple.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j2-impl</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mariadb.jdbc</groupId>
                <artifactId>mariadb-java-client</artifactId>
                <version>${mariadb-java-client.version}</version>
            </dependency>
            <dependency>
                <groupId>com.mchange</groupId>
                <artifactId>c3p0</artifactId>
                <version>${c3po.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty.version}</version>
            </dependency>

            <!-- Jakarta Mail (formerly JavaMail) TODO: [ES] depend on angus-mail -->
            <dependency>
                <groupId>org.eclipse.angus</groupId>
                <artifactId>jakarta.mail</artifactId>
                <version>${mail.version}</version>
            </dependency>

            <!-- Hazelcast -->
            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast-all</artifactId>
                <version>${hazelcast.version}</version>
            </dependency>

            <!-- bouncy castle -->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpg-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcjmail-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>jakarta.mail</artifactId>
                        <groupId>com.sun.mail</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>

            <!-- apache commons -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons-compress.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>${commons-net.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-validator</groupId>
                <artifactId>commons-validator</artifactId>
                <version>${commons-validator.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-beanutils</groupId>
                        <artifactId>commons-beanutils</artifactId>
                    </exclusion>
                    <!-- commons-logging conflicts with spring-jcl -->
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons-collections.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-email</artifactId>
                <version>${commons-email.version}</version>
                <!-- TODO: [ES] commons-email has not switched to Jakarta -->
                <exclusions>
                    <exclusion>
                        <artifactId>javax.mail</artifactId>
                        <groupId>com.sun.mail</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity.version}</version>
            </dependency>

            <!-- jsoup HTML parser library @ http://jsoup.org/ -->
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>

            <!-- Jetty as an embedded server -->
            <dependency>
                <groupId>org.eclipse.jetty.http2</groupId>
                <artifactId>http2-common</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty.http2</groupId>
                <artifactId>http2-hpack</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty.http2</groupId>
                <artifactId>http2-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-alpn-java-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-alpn-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-io</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-jmx</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-servlets</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-rewrite</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-webapp</artifactId>
                <version>${jetty.version}</version>
            </dependency>

            <!-- Jersey JAX-RS 3.0 implementation -->
            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-servlet</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-client</artifactId>
                <version>${jersey.version}</version>
                <exclusions>
                    <!-- aopalliance included by spring-aop dependency -->
                    <exclusion>
                        <groupId>org.glassfish.hk2.external</groupId>
                        <artifactId>aopalliance-repackaged</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-multipart</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-jaxb</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.inject</groupId>
                <artifactId>jersey-hk2</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <!-- don't use the Validation API in our code, use the static checks (JSR305) instead -->
                <groupId>jakarta.validation</groupId>
                <artifactId>jakarta.validation-api</artifactId>
                <version>${validation.version}</version>
                <!-- set scope to prevent compile-time checks but Jersey can use at runtime -->
                <scope>runtime</scope>
            </dependency>

            <!-- Jackson JSON Library -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.jakarta.rs</groupId>
                <artifactId>jackson-jakarta-rs-base</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.jakarta.rs</groupId>
                <artifactId>jackson-jakarta-rs-json-provider</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                 <groupId>com.fasterxml.jackson.core</groupId>
                 <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-jakarta-xmlbind-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- StaxUtils for the XMLWriterUtils -->
            <dependency>
                <groupId>net.java.dev.stax-utils</groupId>
                <artifactId>stax-utils</artifactId>
                <version>${stax-utils.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.bea.xml</groupId>
                        <artifactId>jsr173-ri</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- JAXB -->
            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${jaxb.api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-runtime</artifactId>
                <version>${jaxb.impl.version}</version>
            </dependency>

            <!--ElasticSearch -->
            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${elasticsearch.version}</version>
                <exclusions>
                    <!-- commons-logging conflicts with spring-jcl -->
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- diffutils -->
            <dependency>
                <groupId>com.googlecode.java-diff-utils</groupId>
                <artifactId>diffutils</artifactId>
                <version>${diffutils.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.cache</groupId>
                <artifactId>cache-api</artifactId>
                <version>${jcache.version}</version>
            </dependency>

            <dependency>
                <groupId>com.googlecode.ez-vcard</groupId>
                <artifactId>ez-vcard</artifactId>
                <version>${ezvcard.version}</version>
            </dependency>

            <!-- Solr -->
            <dependency>
                <groupId>org.apache.solr</groupId>
                <artifactId>solr-solrj</artifactId>
                <version>${solrj.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>net.javacrumbs.shedlock</groupId>
                <artifactId>shedlock-spring</artifactId>
                <version>${shedlock.version}</version>
            </dependency>
            <dependency>
                <groupId>net.javacrumbs.shedlock</groupId>
                <artifactId>shedlock-provider-jdbc-template</artifactId>
                <version>${shedlock.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>${persistence.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>${findbugs.version}</version>
        </dependency>

        <!-- common test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <version>${spock.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit-dep</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-spring</artifactId>
            <version>${spock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.codehaus.groovy</groupId>
          <artifactId>groovy</artifactId>
          <version>${groovy.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j2-impl</artifactId>
            <version>${log4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.8</version>
                <executions>
                    <execution>
                        <id>before-unit-test-execution</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</destFile>
                            <propertyName>surefire.jacoco.args</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>after-unit-test-execution</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-unit-test-coverage-report</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>before-integration-test-execution</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</destFile>
                            <propertyName>failsafe.jacoco.args</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>after-integration-test-execution</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-integration-test-coverage-report</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>merge-unit-and-integration</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}/jacoco-output/</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                            <destFile>${project.build.directory}/jacoco-output/merged.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-merged-report</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-merged-test-coverage-report</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${basedir}</directory>
                            <includes>
                                <include>var*/**</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <release>${java.version}</release>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <compilerArgs>
                        <arg>-Xlint</arg>
                        <arg>-Xlint:-unchecked</arg>
                        <arg>-Xlint:-rawtypes</arg>
                        <arg>-Xlint:-serial</arg>
                        <arg>-Xlint:-fallthrough</arg>
                    	<arg>--add-modules</arg>
                    	<arg>java.sql,java.xml</arg>
                    </compilerArgs>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>1.13.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <redirectTestOutputToFile>${test.redirectOutput}</redirectTestOutputToFile>
                    <argLine>-Xmx512m -DjvmId=${surefire.forkNumber} ${surefire.jacoco.args}</argLine>
                    <includes>
                        <include>${test.files.unit}</include>
                    </includes>
                    <excludes>
                        <exclude>${test.files.integration}</exclude>
                    </excludes>
                    <runOrder>random</runOrder>
                    <forkCount>1C</forkCount>
                    <threadCount>1</threadCount>
                    <reuseForks>true</reuseForks>
                    <excludedGroups>IntegrationTest,ManualTest,ElasticSearchTest</excludedGroups>
                    <systemPropertyVariables>
                        <hazelcast.version.check.enabled>false</hazelcast.version.check.enabled>
                        <hazelcast.phone.home.enabled>false</hazelcast.phone.home.enabled>
                        <test.containers.disabled>${test.containers.disabled}</test.containers.disabled>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <redirectTestOutputToFile>${test.redirectOutput}</redirectTestOutputToFile>
                    <argLine>-Xmx1024m -DjvmId=${surefire.forkNumber} --add-modules java.sql,java.xml ${failsafe.jacoco.args}</argLine>
                    <includes>
                        <include>${test.files.integration}</include>
                    </includes>
                    <excludes>
                        <exclude>${test.files.excludes}</exclude>
                    </excludes>
                    <excludedGroups>ManualTest</excludedGroups>
                    <forkCount>1C</forkCount>
                    <reuseForks>true</reuseForks>
                    <runOrder>random</runOrder>
                    <testFailureIgnore>false</testFailureIgnore>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Plugin forked from mojohaus project to add Java 11 support -->
                <groupId>io.starter</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <version>1.12.9</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <complianceLevel>${java.version}</complianceLevel>
                    <!-- TODO: no sources in root project causes an error, continue anyway -->
                    <proceedOnError>true</proceedOnError>
                    <!-- [TP] This is a bit ugly part.
                        aspectjweaver, spring-context, spring-tx libs were removed from whois-rpsl/pom.xml, because they
                        pull many deps, and no aspects are/should be present in this module. By removing the libs, a lot of
                        warnings are thrown so it is good to exlude this module from weaver's visibility. However the
                        aspectj maven plugin, cannot exclude a whole module, and also it expects one source at least
                        to be found in main and in test in each module, otherwise it fails the compilation with "No sources found".
                        That is why almost all packages/classes from whois-rpsl are excluded except one in main and one
                        in test (the commented out ones). There mignt be a better way to do this, but I could not find one.
                        Ideally whois-rpsl module, should have its unique package name, and not packages shared with other modules.
                    -->
                    <excludes>
                        <exclude>**/generated/**</exclude>
                        <exclude>**/net/ripe/db/whois/common/rpsl/**</exclude>
                        <exclude>**/net/ripe/db/whois/common/domain/**</exclude>
                        <exclude>**/net/ripe/db/whois/common/ip/**</exclude>
                        <exclude>**/net/ripe/db/whois/common/io/ByteArrayInput.java</exclude>
                        <exclude>**/net/ripe/db/whois/common/io/ByteArrayOutput.java</exclude>
                        <exclude>**/net/ripe/db/whois/common/io/RpslObjectFileReader.java</exclude>
                        <exclude>**/net/ripe/db/whois/common/io/ByteArrayInputTest.java</exclude>
                        <exclude>**/net/ripe/db/whois/common/io/ByteArrayOutputTest.java</exclude>
                        <exclude>**/net/ripe/db/whois/common/IllegalArgumentExceptionMessage.java</exclude>
                        <exclude>**/net/ripe/db/whois/common/Message.java</exclude>
                        <exclude>**/net/ripe/db/whois/common/Messages.java</exclude>
                    </excludes>

                    <Xlint>warning</Xlint>
                    <verbose>true</verbose>
                    <forceAjcCompile>true</forceAjcCompile>
                    <showWeaveInfo>true</showWeaveInfo>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <warn>none</warn>
                    <aspectLibraries>
                        <aspectLibrary>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring-aspects</artifactId>
                        </aspectLibrary>
                    </aspectLibraries>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjweaver</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjtools</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- dependency check is off by default. Run mvn dependency-check:check to run standalone -->
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>6.5.0</version>
                <executions>
                    <execution>
                        <id>not-by-default</id>
                        <phase>not-by-default</phase>
                    </execution>
                </executions>
            </plugin>
            <!-- check for mis-matching dependency versions -->
            <!-- enforcer plugin is off by default. Run mvn enforcer:enforce to run standalone -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <rules>
                        <dependencyConvergence/>
                    </rules>
                    <!-- do not fail the build, just log the dependency conflict -->
                    <fail>false</fail>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <version>5.0.0</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.5.0</version>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>junit</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <test.redirectOutput>true</test.redirectOutput>
                <test.groups>None</test.groups>
                <test.files.unit>**/*Test.class</test.files.unit>
                <test.files.integration>None</test.files.integration>
                <test.files.excludes>None</test.files.excludes>
            </properties>
        </profile>
        <profile>
            <id>integration</id>
            <properties>
                <test.redirectOutput>true</test.redirectOutput>
                <test.groups>IntegrationTest</test.groups>
                <test.files.unit>None</test.files.unit>
                <test.files.integration>**/*Integration*.class,**/*Spec*.class</test.files.integration>
                <test.files.excludes>**/*Elastic*.class</test.files.excludes>
            </properties>
        </profile>
        <profile>
            <id>integrationAll</id>
            <properties>
                <test.redirectOutput>true</test.redirectOutput>
                <test.groups>IntegrationTest,ElasticSearchTest</test.groups>
                <test.files.unit>None</test.files.unit>
                <test.files.integration>**/*Integration*.class,**/*Spec*.class</test.files.integration>
                <test.files.excludes>None</test.files.excludes>
            </properties>
        </profile>
        <profile>
            <id>comparison</id>
            <properties>
                <test.redirectOutput>false</test.redirectOutput>
                <test.groups>ManualTest</test.groups>
                <test.files.unit>None</test.files.unit>
                <test.files.integration>
                    **/CompareTwoQueryInstancesByFile.class,
                    **/CompareTwoRestInstancesByFile.class,
                    **/CompareTwoNrtmInstances.class
                </test.files.integration>
                <test.files.excludes>None</test.files.excludes>
            </properties>
        </profile>
        <profile>
            <id>all</id>
            <properties>
                <test.redirectOutput>true</test.redirectOutput>
                <test.groups>IntegrationTest</test.groups>
                <test.files.unit>**/*Test.class</test.files.unit>
                <test.files.integration>**/*Test*.class,**/*Spec*.class</test.files.integration>
                <test.files.excludes>None</test.files.excludes>
            </properties>
        </profile>
        <profile>
            <id>release</id>
            <properties>
                <test.redirectOutput>true</test.redirectOutput>
                <test.files.unit>**/*Test.class</test.files.unit>
                <test.files.integration>None</test.files.integration>
                <test.files.excludes>None</test.files.excludes>
                <maven.javadoc.skip>true</maven.javadoc.skip>
            </properties>
        </profile>
        <profile>
            <id>jmeter</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.lazerycode.jmeter</groupId>
                        <artifactId>jmeter-maven-plugin</artifactId>
                        <version>1.10.0</version>
                        <configuration>
                            <reportDir>${project.build.directory}/jmeter-reports</reportDir>
                        </configuration>
                        <executions>
                            <execution>
                                <id>jmeter</id>
                                <phase>none</phase>
                                <goals>
                                    <goal>jmeter</goal>
                                </goals>
                           </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <!-- Checking for new versions of dependencies: mvn versions:display-dependency-updates -->
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.8.1</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependency-updates-report</report>
                            <report>plugin-updates-report</report>
                            <report>property-updates-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
</project>
